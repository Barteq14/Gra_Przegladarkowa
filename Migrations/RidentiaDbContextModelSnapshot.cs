// <auto-generated />
using System;
using Gra_przegladarkowa.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gra_przegladarkowa.Migrations
{
    [DbContext(typeof(RidentiaDbContext))]
    partial class RidentiaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Character", b =>
                {
                    b.Property<int>("CharacterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int?>("BackpackID")
                        .HasColumnType("int");

                    b.Property<int>("BlockHit")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentEquipmentID")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("FamePoint")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<int>("Inteligance")
                        .HasColumnType("int");

                    b.Property<int?>("LevelID")
                        .HasColumnType("int");

                    b.Property<string>("NameCharacter")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("ProfessionID")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileID")
                        .HasColumnType("int");

                    b.Property<int>("Resistance")
                        .HasColumnType("int");

                    b.Property<int>("Strenght")
                        .HasColumnType("int");

                    b.Property<int>("Vitality")
                        .HasColumnType("int");

                    b.Property<int?>("WorkID")
                        .HasColumnType("int");

                    b.HasKey("CharacterID");

                    b.HasIndex("BackpackID")
                        .IsUnique()
                        .HasFilter("[BackpackID] IS NOT NULL");

                    b.HasIndex("CurrentEquipmentID")
                        .IsUnique()
                        .HasFilter("[CurrentEquipmentID] IS NOT NULL");

                    b.HasIndex("LevelID");

                    b.HasIndex("ProfessionID");

                    b.HasIndex("ProfileID")
                        .IsUnique()
                        .HasFilter("[ProfileID] IS NOT NULL");

                    b.HasIndex("WorkID");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Friend", b =>
                {
                    b.Property<int>("FriendID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Character2CharacterID")
                        .HasColumnType("int");

                    b.Property<int?>("FriendID1")
                        .HasColumnType("int");

                    b.Property<int?>("FriendID2")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("FriendID");

                    b.HasIndex("Character2CharacterID");

                    b.HasIndex("FriendID2");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Level", b =>
                {
                    b.Property<int>("LevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ReceivedPoint")
                        .HasColumnType("int");

                    b.Property<int>("RequiredExp")
                        .HasColumnType("int");

                    b.HasKey("LevelID");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Character2CharacterID")
                        .HasColumnType("int");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(999999999);

                    b.Property<int?>("Receiver")
                        .HasColumnType("int");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Sender")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("MessageID");

                    b.HasIndex("Character2CharacterID");

                    b.HasIndex("Receiver");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Profession", b =>
                {
                    b.Property<int>("ProfessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("BlockHit")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(999999999);

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<string>("ImageProfessionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageProfessionName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Inteligance")
                        .HasColumnType("int");

                    b.Property<string>("NameProfession")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("NameSpecialMove")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Resistance")
                        .HasColumnType("int");

                    b.Property<int>("SpecialMoveTurnRequired")
                        .HasColumnType("int");

                    b.Property<int>("Strenght")
                        .HasColumnType("int");

                    b.Property<int>("Vitality")
                        .HasColumnType("int");

                    b.HasKey("ProfessionID");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Statistic", b =>
                {
                    b.Property<int>("StatisticID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<int>("Fame")
                        .HasColumnType("int");

                    b.Property<DateTime>("FightDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FightLose")
                        .HasColumnType("int");

                    b.Property<int>("FightWin")
                        .HasColumnType("int");

                    b.Property<int>("GoldStolen")
                        .HasColumnType("int");

                    b.HasKey("StatisticID");

                    b.HasIndex("CharacterID");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Work", b =>
                {
                    b.Property<int>("WorkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(999999999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("RevardExp")
                        .HasColumnType("int");

                    b.Property<int>("RevardGold")
                        .HasColumnType("int");

                    b.Property<int>("WorkTime")
                        .HasColumnType("int");

                    b.HasKey("WorkID");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.Building", b =>
                {
                    b.Property<int>("BuildingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostUpgrade")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(999999999);

                    b.Property<string>("ImageBuilding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("NameBuilding")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<string>("PowerInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(999999999);

                    b.HasKey("BuildingID");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.Guild", b =>
                {
                    b.Property<int>("GuildID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(999999999);

                    b.Property<int>("FamePointGuild")
                        .HasColumnType("int");

                    b.Property<int>("GoldGuild")
                        .HasColumnType("int");

                    b.Property<int>("MaxMember")
                        .HasColumnType("int");

                    b.Property<string>("NameGuild")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("GuildID");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.GuildChat", b =>
                {
                    b.Property<int>("GuildChatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(999999999);

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GuildChatID");

                    b.HasIndex("MemberID")
                        .IsUnique();

                    b.ToTable("GuildChats");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.Guild_Building", b =>
                {
                    b.Property<int>("GuildBuildingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("BuildingID1")
                        .HasColumnType("int");

                    b.Property<int>("GuildID")
                        .HasColumnType("int");

                    b.HasKey("GuildBuildingID");

                    b.HasIndex("BuildingID");

                    b.HasIndex("BuildingID1");

                    b.ToTable("Guild_Buildings");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.InvitationsGuild", b =>
                {
                    b.Property<int>("InvitationsGuildID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<int>("GuildID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("InvitationsGuildID");

                    b.HasIndex("CharacterID");

                    b.HasIndex("GuildID");

                    b.ToTable("InvitationsGuilds");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharacterID")
                        .HasColumnType("int");

                    b.Property<int?>("GuildID")
                        .HasColumnType("int");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("MemberID");

                    b.HasIndex("CharacterID")
                        .IsUnique()
                        .HasFilter("[CharacterID] IS NOT NULL");

                    b.HasIndex("GuildID");

                    b.HasIndex("RoleID")
                        .IsUnique()
                        .HasFilter("[RoleID] IS NOT NULL");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.RaportGuild", b =>
                {
                    b.Property<int>("RaportGuildID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRaportGuild")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fame")
                        .HasColumnType("int");

                    b.Property<int>("GoldStolen")
                        .HasColumnType("int");

                    b.Property<int?>("GuildID")
                        .HasColumnType("int");

                    b.Property<int?>("GuildID2")
                        .HasColumnType("int");

                    b.HasKey("RaportGuildID");

                    b.HasIndex("GuildID");

                    b.HasIndex("GuildID2");

                    b.ToTable("RaportGuilds");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GuildID")
                        .HasColumnType("int");

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("RoleID");

                    b.HasIndex("GuildID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Item.Backpack", b =>
                {
                    b.Property<int>("BackpackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("BackpackID");

                    b.ToTable("Backpacks");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Item.Backpack_Item", b =>
                {
                    b.Property<int>("BackpackItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BackpackID")
                        .HasColumnType("int");

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.HasKey("BackpackItemID");

                    b.HasIndex("BackpackID");

                    b.HasIndex("ItemID");

                    b.ToTable("Backpack_Items");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Item.CategoryItem", b =>
                {
                    b.Property<int>("CategoryItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameCategoryItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("CategoryItemID");

                    b.ToTable("CategoryItems");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Item.CurrentEquipment", b =>
                {
                    b.Property<int>("CurrentEquipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CurrentEquipmentID");

                    b.ToTable("CurrentEquipment");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Item.CurrentEquipment_Item", b =>
                {
                    b.Property<int>("CurrentEquipmentItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CurrentEquipmentID")
                        .HasColumnType("int");

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.HasKey("CurrentEquipmentItemID");

                    b.HasIndex("CurrentEquipmentID");

                    b.HasIndex("ItemID");

                    b.ToTable("CurrentEquipment_Items");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Item.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("BlockHit")
                        .HasColumnType("int");

                    b.Property<int>("CategoryItemID")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<string>("ImageItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Inteligence")
                        .HasColumnType("int");

                    b.Property<double>("ItemPrice")
                        .HasColumnType("float");

                    b.Property<string>("NameItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("ProfessionID")
                        .HasColumnType("int");

                    b.Property<int>("RequiredLvl")
                        .HasColumnType("int");

                    b.Property<int>("Resistance")
                        .HasColumnType("int");

                    b.Property<int>("Strenght")
                        .HasColumnType("int");

                    b.Property<int>("Vitality")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.HasIndex("CategoryItemID");

                    b.HasIndex("ProfessionID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Mission.Missions", b =>
                {
                    b.Property<int>("MissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(999999999);

                    b.Property<int>("MissionLvl")
                        .HasColumnType("int");

                    b.Property<int>("MonsterID")
                        .HasColumnType("int");

                    b.Property<string>("NameMission")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("RequiredQuantity")
                        .HasColumnType("int");

                    b.Property<int>("RevardExp")
                        .HasColumnType("int");

                    b.Property<int>("RevardGold")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("MissionID");

                    b.HasIndex("CharacterID");

                    b.HasIndex("MonsterID");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Mission.Monster", b =>
                {
                    b.Property<int>("MonsterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("BlockHit")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("DeathRevardExp")
                        .HasColumnType("int");

                    b.Property<int>("DeathRevardGold")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<string>("ImageMonsterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Inteligence")
                        .HasColumnType("int");

                    b.Property<int?>("MonsterID1")
                        .HasColumnType("int");

                    b.Property<int>("MonsterLvl")
                        .HasColumnType("int");

                    b.Property<string>("NameMonster")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Resistance")
                        .HasColumnType("int");

                    b.Property<int>("Strenght")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRespown")
                        .HasColumnType("datetime2");

                    b.Property<int>("Vitality")
                        .HasColumnType("int");

                    b.HasKey("MonsterID");

                    b.HasIndex("MonsterID1");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Profile", b =>
                {
                    b.Property<int>("ProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountBan")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("ProfileID");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Character", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Item.Backpack", "Backpack")
                        .WithOne("Character")
                        .HasForeignKey("Gra_przegladarkowa.Models.Character.Character", "BackpackID");

                    b.HasOne("Gra_przegladarkowa.Models.Item.CurrentEquipment", "CurrentEquipment")
                        .WithOne("Character")
                        .HasForeignKey("Gra_przegladarkowa.Models.Character.Character", "CurrentEquipmentID");

                    b.HasOne("Gra_przegladarkowa.Models.Character.Level", "Level")
                        .WithMany("Characters")
                        .HasForeignKey("LevelID");

                    b.HasOne("Gra_przegladarkowa.Models.Character.Profession", "Profession")
                        .WithMany("Characters")
                        .HasForeignKey("ProfessionID");

                    b.HasOne("Gra_przegladarkowa.Models.Profile", "Profile")
                        .WithOne("Character")
                        .HasForeignKey("Gra_przegladarkowa.Models.Character.Character", "ProfileID");

                    b.HasOne("Gra_przegladarkowa.Models.Character.Work", "Work")
                        .WithMany("Characters")
                        .HasForeignKey("WorkID");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Friend", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Character.Character", "Character2")
                        .WithMany()
                        .HasForeignKey("Character2CharacterID");

                    b.HasOne("Gra_przegladarkowa.Models.Character.Character", "Character")
                        .WithMany()
                        .HasForeignKey("FriendID2");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Message", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Character.Character", "Character2")
                        .WithMany()
                        .HasForeignKey("Character2CharacterID");

                    b.HasOne("Gra_przegladarkowa.Models.Character.Character", "Character")
                        .WithMany()
                        .HasForeignKey("Receiver");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Character.Statistic", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Character.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.GuildChat", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Guild.Member", "Member")
                        .WithOne("GuildChat")
                        .HasForeignKey("Gra_przegladarkowa.Models.Guild.GuildChat", "MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.Guild_Building", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Guild.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gra_przegladarkowa.Models.Guild.Building", "Building")
                        .WithMany("Guild_Buildings")
                        .HasForeignKey("BuildingID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.InvitationsGuild", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Character.Character", "Character")
                        .WithMany("InvitationsGuilds")
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gra_przegladarkowa.Models.Guild.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.Member", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Character.Character", "Character")
                        .WithOne("Member")
                        .HasForeignKey("Gra_przegladarkowa.Models.Guild.Member", "CharacterID");

                    b.HasOne("Gra_przegladarkowa.Models.Guild.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildID");

                    b.HasOne("Gra_przegladarkowa.Models.Guild.Role", "Role")
                        .WithOne("Member")
                        .HasForeignKey("Gra_przegladarkowa.Models.Guild.Member", "RoleID");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.RaportGuild", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Guild.Guild", "Guild2")
                        .WithMany()
                        .HasForeignKey("GuildID");

                    b.HasOne("Gra_przegladarkowa.Models.Guild.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildID2");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Guild.Role", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Guild.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildID");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Item.Backpack_Item", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Item.Backpack", "Backpack")
                        .WithMany("Backpack_Items")
                        .HasForeignKey("BackpackID");

                    b.HasOne("Gra_przegladarkowa.Models.Item.Item", "Item")
                        .WithMany("Backpack_Items")
                        .HasForeignKey("ItemID");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Item.CurrentEquipment_Item", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Item.CurrentEquipment", "CurrentEquipment")
                        .WithMany("CurrentEquipment_Items")
                        .HasForeignKey("CurrentEquipmentID");

                    b.HasOne("Gra_przegladarkowa.Models.Item.Item", "Item")
                        .WithMany("CurrentEquipment_Items")
                        .HasForeignKey("ItemID");
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Item.Item", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Item.CategoryItem", "CategoryItem")
                        .WithMany("Items")
                        .HasForeignKey("CategoryItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gra_przegladarkowa.Models.Character.Profession", "Profession")
                        .WithMany("Items")
                        .HasForeignKey("ProfessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Mission.Missions", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Character.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gra_przegladarkowa.Models.Mission.Monster", "Monster")
                        .WithMany()
                        .HasForeignKey("MonsterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gra_przegladarkowa.Models.Mission.Monster", b =>
                {
                    b.HasOne("Gra_przegladarkowa.Models.Mission.Monster", null)
                        .WithMany("Monsters")
                        .HasForeignKey("MonsterID1");
                });
#pragma warning restore 612, 618
        }
    }
}
